"""autogenerated by genpy from actuators/FailureState.msg. Do not edit."""
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct

import std_msgs.msg

class FailureState(genpy.Message):
  _md5sum = "83c7d53d0258c1c590059a0c5973d56c"
  _type = "actuators/FailureState"
  _has_header = True #flag to mark the presence of a Header object
  _full_text = """Header header

uint8 left_horizontal_control_surface_1_status
uint8 left_horizontal_control_surface_2_status

uint8 right_horizontal_control_surface_3_status
uint8 right_horizontal_control_surface_4_status

uint8 left_vertical_control_surface_5_status
uint8 left_vertical_control_surface_6_status

uint8 right_vertical_control_surface_7_status
uint8 right_vertical_control_surface_8_status

uint8 left_electromotor_status
uint8 right_electromotor_status

uint8 left_electromotor_servo_status
uint8 right_electromotor_servo_status

uint8 left_main_engine_temperature_sensor_status
uint8 left_main_engine_shutdown_status
uint8 left_main_engine_initialization_status
uint8 left_main_engine_throttle_servo_status
uint8 left_main_engine_failure_code

uint8 left_main_engine_fuel_pressure_sensor_status
uint8 left_main_engine_cylinder_1_temperature_sensor_status
uint8 left_main_engine_cylinder_2_temperature_sensor_status
uint8 left_main_engine_exhaust_temperature_sensor_status
uint8 left_main_engine_aux_fuel_tank_sensor_status
uint8 left_main_engine_main_fuel_tank_sensor_status
uint8 left_main_engine_failure_code_2

uint8 right_main_engine_temperature_sensor_status
uint8 right_main_engine_shutdown_status
uint8 right_main_engine_initialization_status
uint8 right_main_engine_throttle_servo_status
uint8 right_main_engine_failure_code

uint8 right_main_engine_fuel_pressure_sensor_status
uint8 right_main_engine_cylinder_1_temperature_sensor_status
uint8 right_main_engine_cylinder_2_temperature_sensor_status
uint8 right_main_engine_exhaust_temperature_sensor_status
uint8 right_main_engine_aux_fuel_tank_sensor_status
uint8 right_main_engine_main_fuel_tank_sensor_status
uint8 right_main_engine_failure_code_2

uint8 left_main_engine_servo_mechanical_structure_status
uint8 left_main_engine_servo_dc_current_status
uint8 left_main_engine_servo_dc_voltage_status
uint8 left_main_engine_servo_temperature_sensor_status
uint8 left_main_engine_servo_communication_link_status
uint8 left_main_engine_servo_sensor_failure
uint8 left_main_engine_servo_failure_code

uint8 right_main_engine_servo_mechanical_structure_status
uint8 right_main_engine_servo_dc_current_status
uint8 right_main_engine_servo_dc_voltage_status
uint8 right_main_engine_servo_temperature_sensor_status
uint8 right_main_engine_servo_communication_link_status
uint8 right_main_engine_servo_sensor_failure
uint8 right_main_engine_servo_failure_code

uint8 left_ballonet_valve_open_possible
uint8 left_ballonet_valve_close_possible
uint8 left_ballonet_fan_possible
uint8 left_ballonet_failure_code

uint8 right_ballonet_valve_open_possible
uint8 right_ballonet_valve_close_possible
uint8 right_ballonet_fan_possible
uint8 right_ballonet_failure_code

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.secs: seconds (stamp_secs) since epoch
# * stamp.nsecs: nanoseconds since stamp_secs
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

"""
  __slots__ = ['header','left_horizontal_control_surface_1_status','left_horizontal_control_surface_2_status','right_horizontal_control_surface_3_status','right_horizontal_control_surface_4_status','left_vertical_control_surface_5_status','left_vertical_control_surface_6_status','right_vertical_control_surface_7_status','right_vertical_control_surface_8_status','left_electromotor_status','right_electromotor_status','left_electromotor_servo_status','right_electromotor_servo_status','left_main_engine_temperature_sensor_status','left_main_engine_shutdown_status','left_main_engine_initialization_status','left_main_engine_throttle_servo_status','left_main_engine_failure_code','left_main_engine_fuel_pressure_sensor_status','left_main_engine_cylinder_1_temperature_sensor_status','left_main_engine_cylinder_2_temperature_sensor_status','left_main_engine_exhaust_temperature_sensor_status','left_main_engine_aux_fuel_tank_sensor_status','left_main_engine_main_fuel_tank_sensor_status','left_main_engine_failure_code_2','right_main_engine_temperature_sensor_status','right_main_engine_shutdown_status','right_main_engine_initialization_status','right_main_engine_throttle_servo_status','right_main_engine_failure_code','right_main_engine_fuel_pressure_sensor_status','right_main_engine_cylinder_1_temperature_sensor_status','right_main_engine_cylinder_2_temperature_sensor_status','right_main_engine_exhaust_temperature_sensor_status','right_main_engine_aux_fuel_tank_sensor_status','right_main_engine_main_fuel_tank_sensor_status','right_main_engine_failure_code_2','left_main_engine_servo_mechanical_structure_status','left_main_engine_servo_dc_current_status','left_main_engine_servo_dc_voltage_status','left_main_engine_servo_temperature_sensor_status','left_main_engine_servo_communication_link_status','left_main_engine_servo_sensor_failure','left_main_engine_servo_failure_code','right_main_engine_servo_mechanical_structure_status','right_main_engine_servo_dc_current_status','right_main_engine_servo_dc_voltage_status','right_main_engine_servo_temperature_sensor_status','right_main_engine_servo_communication_link_status','right_main_engine_servo_sensor_failure','right_main_engine_servo_failure_code','left_ballonet_valve_open_possible','left_ballonet_valve_close_possible','left_ballonet_fan_possible','left_ballonet_failure_code','right_ballonet_valve_open_possible','right_ballonet_valve_close_possible','right_ballonet_fan_possible','right_ballonet_failure_code']
  _slot_types = ['std_msgs/Header','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8','uint8']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       header,left_horizontal_control_surface_1_status,left_horizontal_control_surface_2_status,right_horizontal_control_surface_3_status,right_horizontal_control_surface_4_status,left_vertical_control_surface_5_status,left_vertical_control_surface_6_status,right_vertical_control_surface_7_status,right_vertical_control_surface_8_status,left_electromotor_status,right_electromotor_status,left_electromotor_servo_status,right_electromotor_servo_status,left_main_engine_temperature_sensor_status,left_main_engine_shutdown_status,left_main_engine_initialization_status,left_main_engine_throttle_servo_status,left_main_engine_failure_code,left_main_engine_fuel_pressure_sensor_status,left_main_engine_cylinder_1_temperature_sensor_status,left_main_engine_cylinder_2_temperature_sensor_status,left_main_engine_exhaust_temperature_sensor_status,left_main_engine_aux_fuel_tank_sensor_status,left_main_engine_main_fuel_tank_sensor_status,left_main_engine_failure_code_2,right_main_engine_temperature_sensor_status,right_main_engine_shutdown_status,right_main_engine_initialization_status,right_main_engine_throttle_servo_status,right_main_engine_failure_code,right_main_engine_fuel_pressure_sensor_status,right_main_engine_cylinder_1_temperature_sensor_status,right_main_engine_cylinder_2_temperature_sensor_status,right_main_engine_exhaust_temperature_sensor_status,right_main_engine_aux_fuel_tank_sensor_status,right_main_engine_main_fuel_tank_sensor_status,right_main_engine_failure_code_2,left_main_engine_servo_mechanical_structure_status,left_main_engine_servo_dc_current_status,left_main_engine_servo_dc_voltage_status,left_main_engine_servo_temperature_sensor_status,left_main_engine_servo_communication_link_status,left_main_engine_servo_sensor_failure,left_main_engine_servo_failure_code,right_main_engine_servo_mechanical_structure_status,right_main_engine_servo_dc_current_status,right_main_engine_servo_dc_voltage_status,right_main_engine_servo_temperature_sensor_status,right_main_engine_servo_communication_link_status,right_main_engine_servo_sensor_failure,right_main_engine_servo_failure_code,left_ballonet_valve_open_possible,left_ballonet_valve_close_possible,left_ballonet_fan_possible,left_ballonet_failure_code,right_ballonet_valve_open_possible,right_ballonet_valve_close_possible,right_ballonet_fan_possible,right_ballonet_failure_code

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(FailureState, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.header is None:
        self.header = std_msgs.msg.Header()
      if self.left_horizontal_control_surface_1_status is None:
        self.left_horizontal_control_surface_1_status = 0
      if self.left_horizontal_control_surface_2_status is None:
        self.left_horizontal_control_surface_2_status = 0
      if self.right_horizontal_control_surface_3_status is None:
        self.right_horizontal_control_surface_3_status = 0
      if self.right_horizontal_control_surface_4_status is None:
        self.right_horizontal_control_surface_4_status = 0
      if self.left_vertical_control_surface_5_status is None:
        self.left_vertical_control_surface_5_status = 0
      if self.left_vertical_control_surface_6_status is None:
        self.left_vertical_control_surface_6_status = 0
      if self.right_vertical_control_surface_7_status is None:
        self.right_vertical_control_surface_7_status = 0
      if self.right_vertical_control_surface_8_status is None:
        self.right_vertical_control_surface_8_status = 0
      if self.left_electromotor_status is None:
        self.left_electromotor_status = 0
      if self.right_electromotor_status is None:
        self.right_electromotor_status = 0
      if self.left_electromotor_servo_status is None:
        self.left_electromotor_servo_status = 0
      if self.right_electromotor_servo_status is None:
        self.right_electromotor_servo_status = 0
      if self.left_main_engine_temperature_sensor_status is None:
        self.left_main_engine_temperature_sensor_status = 0
      if self.left_main_engine_shutdown_status is None:
        self.left_main_engine_shutdown_status = 0
      if self.left_main_engine_initialization_status is None:
        self.left_main_engine_initialization_status = 0
      if self.left_main_engine_throttle_servo_status is None:
        self.left_main_engine_throttle_servo_status = 0
      if self.left_main_engine_failure_code is None:
        self.left_main_engine_failure_code = 0
      if self.left_main_engine_fuel_pressure_sensor_status is None:
        self.left_main_engine_fuel_pressure_sensor_status = 0
      if self.left_main_engine_cylinder_1_temperature_sensor_status is None:
        self.left_main_engine_cylinder_1_temperature_sensor_status = 0
      if self.left_main_engine_cylinder_2_temperature_sensor_status is None:
        self.left_main_engine_cylinder_2_temperature_sensor_status = 0
      if self.left_main_engine_exhaust_temperature_sensor_status is None:
        self.left_main_engine_exhaust_temperature_sensor_status = 0
      if self.left_main_engine_aux_fuel_tank_sensor_status is None:
        self.left_main_engine_aux_fuel_tank_sensor_status = 0
      if self.left_main_engine_main_fuel_tank_sensor_status is None:
        self.left_main_engine_main_fuel_tank_sensor_status = 0
      if self.left_main_engine_failure_code_2 is None:
        self.left_main_engine_failure_code_2 = 0
      if self.right_main_engine_temperature_sensor_status is None:
        self.right_main_engine_temperature_sensor_status = 0
      if self.right_main_engine_shutdown_status is None:
        self.right_main_engine_shutdown_status = 0
      if self.right_main_engine_initialization_status is None:
        self.right_main_engine_initialization_status = 0
      if self.right_main_engine_throttle_servo_status is None:
        self.right_main_engine_throttle_servo_status = 0
      if self.right_main_engine_failure_code is None:
        self.right_main_engine_failure_code = 0
      if self.right_main_engine_fuel_pressure_sensor_status is None:
        self.right_main_engine_fuel_pressure_sensor_status = 0
      if self.right_main_engine_cylinder_1_temperature_sensor_status is None:
        self.right_main_engine_cylinder_1_temperature_sensor_status = 0
      if self.right_main_engine_cylinder_2_temperature_sensor_status is None:
        self.right_main_engine_cylinder_2_temperature_sensor_status = 0
      if self.right_main_engine_exhaust_temperature_sensor_status is None:
        self.right_main_engine_exhaust_temperature_sensor_status = 0
      if self.right_main_engine_aux_fuel_tank_sensor_status is None:
        self.right_main_engine_aux_fuel_tank_sensor_status = 0
      if self.right_main_engine_main_fuel_tank_sensor_status is None:
        self.right_main_engine_main_fuel_tank_sensor_status = 0
      if self.right_main_engine_failure_code_2 is None:
        self.right_main_engine_failure_code_2 = 0
      if self.left_main_engine_servo_mechanical_structure_status is None:
        self.left_main_engine_servo_mechanical_structure_status = 0
      if self.left_main_engine_servo_dc_current_status is None:
        self.left_main_engine_servo_dc_current_status = 0
      if self.left_main_engine_servo_dc_voltage_status is None:
        self.left_main_engine_servo_dc_voltage_status = 0
      if self.left_main_engine_servo_temperature_sensor_status is None:
        self.left_main_engine_servo_temperature_sensor_status = 0
      if self.left_main_engine_servo_communication_link_status is None:
        self.left_main_engine_servo_communication_link_status = 0
      if self.left_main_engine_servo_sensor_failure is None:
        self.left_main_engine_servo_sensor_failure = 0
      if self.left_main_engine_servo_failure_code is None:
        self.left_main_engine_servo_failure_code = 0
      if self.right_main_engine_servo_mechanical_structure_status is None:
        self.right_main_engine_servo_mechanical_structure_status = 0
      if self.right_main_engine_servo_dc_current_status is None:
        self.right_main_engine_servo_dc_current_status = 0
      if self.right_main_engine_servo_dc_voltage_status is None:
        self.right_main_engine_servo_dc_voltage_status = 0
      if self.right_main_engine_servo_temperature_sensor_status is None:
        self.right_main_engine_servo_temperature_sensor_status = 0
      if self.right_main_engine_servo_communication_link_status is None:
        self.right_main_engine_servo_communication_link_status = 0
      if self.right_main_engine_servo_sensor_failure is None:
        self.right_main_engine_servo_sensor_failure = 0
      if self.right_main_engine_servo_failure_code is None:
        self.right_main_engine_servo_failure_code = 0
      if self.left_ballonet_valve_open_possible is None:
        self.left_ballonet_valve_open_possible = 0
      if self.left_ballonet_valve_close_possible is None:
        self.left_ballonet_valve_close_possible = 0
      if self.left_ballonet_fan_possible is None:
        self.left_ballonet_fan_possible = 0
      if self.left_ballonet_failure_code is None:
        self.left_ballonet_failure_code = 0
      if self.right_ballonet_valve_open_possible is None:
        self.right_ballonet_valve_open_possible = 0
      if self.right_ballonet_valve_close_possible is None:
        self.right_ballonet_valve_close_possible = 0
      if self.right_ballonet_fan_possible is None:
        self.right_ballonet_fan_possible = 0
      if self.right_ballonet_failure_code is None:
        self.right_ballonet_failure_code = 0
    else:
      self.header = std_msgs.msg.Header()
      self.left_horizontal_control_surface_1_status = 0
      self.left_horizontal_control_surface_2_status = 0
      self.right_horizontal_control_surface_3_status = 0
      self.right_horizontal_control_surface_4_status = 0
      self.left_vertical_control_surface_5_status = 0
      self.left_vertical_control_surface_6_status = 0
      self.right_vertical_control_surface_7_status = 0
      self.right_vertical_control_surface_8_status = 0
      self.left_electromotor_status = 0
      self.right_electromotor_status = 0
      self.left_electromotor_servo_status = 0
      self.right_electromotor_servo_status = 0
      self.left_main_engine_temperature_sensor_status = 0
      self.left_main_engine_shutdown_status = 0
      self.left_main_engine_initialization_status = 0
      self.left_main_engine_throttle_servo_status = 0
      self.left_main_engine_failure_code = 0
      self.left_main_engine_fuel_pressure_sensor_status = 0
      self.left_main_engine_cylinder_1_temperature_sensor_status = 0
      self.left_main_engine_cylinder_2_temperature_sensor_status = 0
      self.left_main_engine_exhaust_temperature_sensor_status = 0
      self.left_main_engine_aux_fuel_tank_sensor_status = 0
      self.left_main_engine_main_fuel_tank_sensor_status = 0
      self.left_main_engine_failure_code_2 = 0
      self.right_main_engine_temperature_sensor_status = 0
      self.right_main_engine_shutdown_status = 0
      self.right_main_engine_initialization_status = 0
      self.right_main_engine_throttle_servo_status = 0
      self.right_main_engine_failure_code = 0
      self.right_main_engine_fuel_pressure_sensor_status = 0
      self.right_main_engine_cylinder_1_temperature_sensor_status = 0
      self.right_main_engine_cylinder_2_temperature_sensor_status = 0
      self.right_main_engine_exhaust_temperature_sensor_status = 0
      self.right_main_engine_aux_fuel_tank_sensor_status = 0
      self.right_main_engine_main_fuel_tank_sensor_status = 0
      self.right_main_engine_failure_code_2 = 0
      self.left_main_engine_servo_mechanical_structure_status = 0
      self.left_main_engine_servo_dc_current_status = 0
      self.left_main_engine_servo_dc_voltage_status = 0
      self.left_main_engine_servo_temperature_sensor_status = 0
      self.left_main_engine_servo_communication_link_status = 0
      self.left_main_engine_servo_sensor_failure = 0
      self.left_main_engine_servo_failure_code = 0
      self.right_main_engine_servo_mechanical_structure_status = 0
      self.right_main_engine_servo_dc_current_status = 0
      self.right_main_engine_servo_dc_voltage_status = 0
      self.right_main_engine_servo_temperature_sensor_status = 0
      self.right_main_engine_servo_communication_link_status = 0
      self.right_main_engine_servo_sensor_failure = 0
      self.right_main_engine_servo_failure_code = 0
      self.left_ballonet_valve_open_possible = 0
      self.left_ballonet_valve_close_possible = 0
      self.left_ballonet_fan_possible = 0
      self.left_ballonet_failure_code = 0
      self.right_ballonet_valve_open_possible = 0
      self.right_ballonet_valve_close_possible = 0
      self.right_ballonet_fan_possible = 0
      self.right_ballonet_failure_code = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_struct_3I.pack(_x.header.seq, _x.header.stamp.secs, _x.header.stamp.nsecs))
      _x = self.header.frame_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.pack('<I%ss'%length, length, _x))
      _x = self
      buff.write(_struct_58B.pack(_x.left_horizontal_control_surface_1_status, _x.left_horizontal_control_surface_2_status, _x.right_horizontal_control_surface_3_status, _x.right_horizontal_control_surface_4_status, _x.left_vertical_control_surface_5_status, _x.left_vertical_control_surface_6_status, _x.right_vertical_control_surface_7_status, _x.right_vertical_control_surface_8_status, _x.left_electromotor_status, _x.right_electromotor_status, _x.left_electromotor_servo_status, _x.right_electromotor_servo_status, _x.left_main_engine_temperature_sensor_status, _x.left_main_engine_shutdown_status, _x.left_main_engine_initialization_status, _x.left_main_engine_throttle_servo_status, _x.left_main_engine_failure_code, _x.left_main_engine_fuel_pressure_sensor_status, _x.left_main_engine_cylinder_1_temperature_sensor_status, _x.left_main_engine_cylinder_2_temperature_sensor_status, _x.left_main_engine_exhaust_temperature_sensor_status, _x.left_main_engine_aux_fuel_tank_sensor_status, _x.left_main_engine_main_fuel_tank_sensor_status, _x.left_main_engine_failure_code_2, _x.right_main_engine_temperature_sensor_status, _x.right_main_engine_shutdown_status, _x.right_main_engine_initialization_status, _x.right_main_engine_throttle_servo_status, _x.right_main_engine_failure_code, _x.right_main_engine_fuel_pressure_sensor_status, _x.right_main_engine_cylinder_1_temperature_sensor_status, _x.right_main_engine_cylinder_2_temperature_sensor_status, _x.right_main_engine_exhaust_temperature_sensor_status, _x.right_main_engine_aux_fuel_tank_sensor_status, _x.right_main_engine_main_fuel_tank_sensor_status, _x.right_main_engine_failure_code_2, _x.left_main_engine_servo_mechanical_structure_status, _x.left_main_engine_servo_dc_current_status, _x.left_main_engine_servo_dc_voltage_status, _x.left_main_engine_servo_temperature_sensor_status, _x.left_main_engine_servo_communication_link_status, _x.left_main_engine_servo_sensor_failure, _x.left_main_engine_servo_failure_code, _x.right_main_engine_servo_mechanical_structure_status, _x.right_main_engine_servo_dc_current_status, _x.right_main_engine_servo_dc_voltage_status, _x.right_main_engine_servo_temperature_sensor_status, _x.right_main_engine_servo_communication_link_status, _x.right_main_engine_servo_sensor_failure, _x.right_main_engine_servo_failure_code, _x.left_ballonet_valve_open_possible, _x.left_ballonet_valve_close_possible, _x.left_ballonet_fan_possible, _x.left_ballonet_failure_code, _x.right_ballonet_valve_open_possible, _x.right_ballonet_valve_close_possible, _x.right_ballonet_fan_possible, _x.right_ballonet_failure_code))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    try:
      if self.header is None:
        self.header = std_msgs.msg.Header()
      end = 0
      _x = self
      start = end
      end += 12
      (_x.header.seq, _x.header.stamp.secs, _x.header.stamp.nsecs,) = _struct_3I.unpack(str[start:end])
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.header.frame_id = str[start:end].decode('utf-8')
      else:
        self.header.frame_id = str[start:end]
      _x = self
      start = end
      end += 58
      (_x.left_horizontal_control_surface_1_status, _x.left_horizontal_control_surface_2_status, _x.right_horizontal_control_surface_3_status, _x.right_horizontal_control_surface_4_status, _x.left_vertical_control_surface_5_status, _x.left_vertical_control_surface_6_status, _x.right_vertical_control_surface_7_status, _x.right_vertical_control_surface_8_status, _x.left_electromotor_status, _x.right_electromotor_status, _x.left_electromotor_servo_status, _x.right_electromotor_servo_status, _x.left_main_engine_temperature_sensor_status, _x.left_main_engine_shutdown_status, _x.left_main_engine_initialization_status, _x.left_main_engine_throttle_servo_status, _x.left_main_engine_failure_code, _x.left_main_engine_fuel_pressure_sensor_status, _x.left_main_engine_cylinder_1_temperature_sensor_status, _x.left_main_engine_cylinder_2_temperature_sensor_status, _x.left_main_engine_exhaust_temperature_sensor_status, _x.left_main_engine_aux_fuel_tank_sensor_status, _x.left_main_engine_main_fuel_tank_sensor_status, _x.left_main_engine_failure_code_2, _x.right_main_engine_temperature_sensor_status, _x.right_main_engine_shutdown_status, _x.right_main_engine_initialization_status, _x.right_main_engine_throttle_servo_status, _x.right_main_engine_failure_code, _x.right_main_engine_fuel_pressure_sensor_status, _x.right_main_engine_cylinder_1_temperature_sensor_status, _x.right_main_engine_cylinder_2_temperature_sensor_status, _x.right_main_engine_exhaust_temperature_sensor_status, _x.right_main_engine_aux_fuel_tank_sensor_status, _x.right_main_engine_main_fuel_tank_sensor_status, _x.right_main_engine_failure_code_2, _x.left_main_engine_servo_mechanical_structure_status, _x.left_main_engine_servo_dc_current_status, _x.left_main_engine_servo_dc_voltage_status, _x.left_main_engine_servo_temperature_sensor_status, _x.left_main_engine_servo_communication_link_status, _x.left_main_engine_servo_sensor_failure, _x.left_main_engine_servo_failure_code, _x.right_main_engine_servo_mechanical_structure_status, _x.right_main_engine_servo_dc_current_status, _x.right_main_engine_servo_dc_voltage_status, _x.right_main_engine_servo_temperature_sensor_status, _x.right_main_engine_servo_communication_link_status, _x.right_main_engine_servo_sensor_failure, _x.right_main_engine_servo_failure_code, _x.left_ballonet_valve_open_possible, _x.left_ballonet_valve_close_possible, _x.left_ballonet_fan_possible, _x.left_ballonet_failure_code, _x.right_ballonet_valve_open_possible, _x.right_ballonet_valve_close_possible, _x.right_ballonet_fan_possible, _x.right_ballonet_failure_code,) = _struct_58B.unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_struct_3I.pack(_x.header.seq, _x.header.stamp.secs, _x.header.stamp.nsecs))
      _x = self.header.frame_id
      length = len(_x)
      if python3 or type(_x) == unicode:
        _x = _x.encode('utf-8')
        length = len(_x)
      buff.write(struct.pack('<I%ss'%length, length, _x))
      _x = self
      buff.write(_struct_58B.pack(_x.left_horizontal_control_surface_1_status, _x.left_horizontal_control_surface_2_status, _x.right_horizontal_control_surface_3_status, _x.right_horizontal_control_surface_4_status, _x.left_vertical_control_surface_5_status, _x.left_vertical_control_surface_6_status, _x.right_vertical_control_surface_7_status, _x.right_vertical_control_surface_8_status, _x.left_electromotor_status, _x.right_electromotor_status, _x.left_electromotor_servo_status, _x.right_electromotor_servo_status, _x.left_main_engine_temperature_sensor_status, _x.left_main_engine_shutdown_status, _x.left_main_engine_initialization_status, _x.left_main_engine_throttle_servo_status, _x.left_main_engine_failure_code, _x.left_main_engine_fuel_pressure_sensor_status, _x.left_main_engine_cylinder_1_temperature_sensor_status, _x.left_main_engine_cylinder_2_temperature_sensor_status, _x.left_main_engine_exhaust_temperature_sensor_status, _x.left_main_engine_aux_fuel_tank_sensor_status, _x.left_main_engine_main_fuel_tank_sensor_status, _x.left_main_engine_failure_code_2, _x.right_main_engine_temperature_sensor_status, _x.right_main_engine_shutdown_status, _x.right_main_engine_initialization_status, _x.right_main_engine_throttle_servo_status, _x.right_main_engine_failure_code, _x.right_main_engine_fuel_pressure_sensor_status, _x.right_main_engine_cylinder_1_temperature_sensor_status, _x.right_main_engine_cylinder_2_temperature_sensor_status, _x.right_main_engine_exhaust_temperature_sensor_status, _x.right_main_engine_aux_fuel_tank_sensor_status, _x.right_main_engine_main_fuel_tank_sensor_status, _x.right_main_engine_failure_code_2, _x.left_main_engine_servo_mechanical_structure_status, _x.left_main_engine_servo_dc_current_status, _x.left_main_engine_servo_dc_voltage_status, _x.left_main_engine_servo_temperature_sensor_status, _x.left_main_engine_servo_communication_link_status, _x.left_main_engine_servo_sensor_failure, _x.left_main_engine_servo_failure_code, _x.right_main_engine_servo_mechanical_structure_status, _x.right_main_engine_servo_dc_current_status, _x.right_main_engine_servo_dc_voltage_status, _x.right_main_engine_servo_temperature_sensor_status, _x.right_main_engine_servo_communication_link_status, _x.right_main_engine_servo_sensor_failure, _x.right_main_engine_servo_failure_code, _x.left_ballonet_valve_open_possible, _x.left_ballonet_valve_close_possible, _x.left_ballonet_fan_possible, _x.left_ballonet_failure_code, _x.right_ballonet_valve_open_possible, _x.right_ballonet_valve_close_possible, _x.right_ballonet_fan_possible, _x.right_ballonet_failure_code))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    try:
      if self.header is None:
        self.header = std_msgs.msg.Header()
      end = 0
      _x = self
      start = end
      end += 12
      (_x.header.seq, _x.header.stamp.secs, _x.header.stamp.nsecs,) = _struct_3I.unpack(str[start:end])
      start = end
      end += 4
      (length,) = _struct_I.unpack(str[start:end])
      start = end
      end += length
      if python3:
        self.header.frame_id = str[start:end].decode('utf-8')
      else:
        self.header.frame_id = str[start:end]
      _x = self
      start = end
      end += 58
      (_x.left_horizontal_control_surface_1_status, _x.left_horizontal_control_surface_2_status, _x.right_horizontal_control_surface_3_status, _x.right_horizontal_control_surface_4_status, _x.left_vertical_control_surface_5_status, _x.left_vertical_control_surface_6_status, _x.right_vertical_control_surface_7_status, _x.right_vertical_control_surface_8_status, _x.left_electromotor_status, _x.right_electromotor_status, _x.left_electromotor_servo_status, _x.right_electromotor_servo_status, _x.left_main_engine_temperature_sensor_status, _x.left_main_engine_shutdown_status, _x.left_main_engine_initialization_status, _x.left_main_engine_throttle_servo_status, _x.left_main_engine_failure_code, _x.left_main_engine_fuel_pressure_sensor_status, _x.left_main_engine_cylinder_1_temperature_sensor_status, _x.left_main_engine_cylinder_2_temperature_sensor_status, _x.left_main_engine_exhaust_temperature_sensor_status, _x.left_main_engine_aux_fuel_tank_sensor_status, _x.left_main_engine_main_fuel_tank_sensor_status, _x.left_main_engine_failure_code_2, _x.right_main_engine_temperature_sensor_status, _x.right_main_engine_shutdown_status, _x.right_main_engine_initialization_status, _x.right_main_engine_throttle_servo_status, _x.right_main_engine_failure_code, _x.right_main_engine_fuel_pressure_sensor_status, _x.right_main_engine_cylinder_1_temperature_sensor_status, _x.right_main_engine_cylinder_2_temperature_sensor_status, _x.right_main_engine_exhaust_temperature_sensor_status, _x.right_main_engine_aux_fuel_tank_sensor_status, _x.right_main_engine_main_fuel_tank_sensor_status, _x.right_main_engine_failure_code_2, _x.left_main_engine_servo_mechanical_structure_status, _x.left_main_engine_servo_dc_current_status, _x.left_main_engine_servo_dc_voltage_status, _x.left_main_engine_servo_temperature_sensor_status, _x.left_main_engine_servo_communication_link_status, _x.left_main_engine_servo_sensor_failure, _x.left_main_engine_servo_failure_code, _x.right_main_engine_servo_mechanical_structure_status, _x.right_main_engine_servo_dc_current_status, _x.right_main_engine_servo_dc_voltage_status, _x.right_main_engine_servo_temperature_sensor_status, _x.right_main_engine_servo_communication_link_status, _x.right_main_engine_servo_sensor_failure, _x.right_main_engine_servo_failure_code, _x.left_ballonet_valve_open_possible, _x.left_ballonet_valve_close_possible, _x.left_ballonet_fan_possible, _x.left_ballonet_failure_code, _x.right_ballonet_valve_open_possible, _x.right_ballonet_valve_close_possible, _x.right_ballonet_fan_possible, _x.right_ballonet_failure_code,) = _struct_58B.unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e) #most likely buffer underfill

_struct_I = genpy.struct_I
_struct_3I = struct.Struct("<3I")
_struct_58B = struct.Struct("<58B")
